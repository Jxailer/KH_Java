<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.app.dao.BoardDAO">
	<!-- 게시글이 조회될 때 게시판 번호도 같이 조회되어 출력되도록함. -->
	<!-- 
	resultMap은 클래스의 맴버 이름과 테이블의 속성 이름이 다른 경우 Mapping하기 위해 사용. 
	-->
	<resultMap type="kr.kh.app.model.vo.BoardVO" id="BoardMap">
		<!-- property는 클래스 멤버변수 이름, column은 테이블 속성 이름 -->
		<id property="bo_num" column="bo_num"/>
		<result property="bo_co_num" column="bo_co_num"/>
		<result property="bo_me_id" column="bo_me_id"/>
		<result property="bo_title" column="bo_title"/>
		<result property="bo_content" column="bo_content"/>
		<result property="bo_view" column="bo_view"/>
		<result property="bo_report_count" column="bo_report_count"/>
		
		<!-- 
		property: BoardVO의 멤버변수 이름과 동일해야함.
		column: select의 검색에서 활용할 속성값의 이름(bo_co_num을 이용해서 select 문을 실행함.)
		select: selectCommunity라는 메서드를 실행시키도록함.
		
		selectCommunity 라는 쿼리를 bo_co_num을 이용해 실행한 후 나온 값을 CommunityVO 포맷으로 return한 뒤,
		BoardVO의 community 변수에 저장함.
		 -->
		<collection property="community" column="bo_co_num" select="selectCommunity" ofType="kr.kh.app.model.vo.CommunityVO"/>
	</resultMap>
	
	
	<insert id="insertBoard" useGeneratedKeys="true" keyProperty="board.bo_num">
		<!-- 
		useGeneratedKeys="true" 
		keyProperty="board.bo_num" 
		게시글이 DB에 추가됐을 때 생성된 기본 키를 가져와서 board 객체에 저장함.
		-->
		INSERT INTO BOARD(bo_title, bo_content, bo_co_num, bo_me_id)
		VALUES(#{board.bo_title},#{board.bo_content},#{board.bo_co_num},#{board.bo_me_id})
	</insert>
	<insert id="insertFile">
		insert into file(fi_bo_num, fi_ori_name, fi_name) values(#{file.fi_bo_num}, #{file.fi_ori_name}, #{file.fi_name})
	</insert>
	<insert id="inserRecommend">
		INSERT INTO recommend(re_me_id, re_bo_num, re_state) VALUES(#{re.re_me_id}, #{re.re_bo_num}, #{re.re_state})
	</insert>
	<insert id="insertComment">
		INSERT INTO comment(cm_content, cm_me_id, cm_bo_num) VALUES(#{cm.cm_content}, #{cm.cm_me_id}, #{cm.cm_bo_num})
	</insert>
	
	
	<select id="selectCommunityList" resultType="kr.kh.app.model.vo.CommunityVO">
		select * from Community;
	</select>
	
	<!--  
	<select id="selectBoardList" resultMap="BoardMap">
		select * from Board order by bo_num desc;
	</select>
	-->
	
	<!-- pagination 수정 -->
	<select id="selectBoardList" resultMap="BoardMap">
		SELECT * from Board 
		<!-- 모든 검색을 할 경우 -->
		<if test='cri.type == "all" '>
			WHERE bo_title 
			LIKE CONCAT('%', #{cri.search}, '%')
			OR bo_me_id = #{cri.search}
		</if> 
		<!-- 제목 검색을 하는 경우 -->
		<if test='cri.type == "title" '>
			where bo_title LIKE CONCAT('%', #{cri.search}, '%')
		</if>
		<!-- 글쓴이 검색을 할 경우 -->
		<if test='cri.type == "writer" '>
			WHERE bo_me_id = #{cri.search}
		</if>
		ORDER BY bo_num DESC
		LIMIT ${cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id = "getTotalCount" resultType="int">
		select count(*) from board
		<if test='cri.type == "all" '>
			WHERE bo_title 
			LIKE CONCAT('%', #{cri.search}, '%')
			OR bo_me_id = #{cri.search}
		</if> 
		<!-- 제목 검색을 하는 경우 -->
		<if test='cri.type == "title" '>
			where bo_title LIKE CONCAT('%', #{cri.search}, '%')
		</if>
		<!-- 글쓴이 검색을 할 경우 -->
		<if test='cri.type == "writer" '>
			WHERE bo_me_id = #{cri.search}
		</if>
	</select>
	
	<select id="selectCommunity" resultType="kr.kh.app.model.vo.CommunityVO">
		select * from community where co_num = #{bo_co_num}
	</select>
	
	<select id="getBoard" resultMap="BoardMap">
		select * from board where bo_num = #{num}
	</select>
	
	<select id="selectFileByBo_num" resultType="kr.kh.app.model.vo.FileVO">
		SELECT * FROM file WHERE fi_bo_num = #{num}
	</select>
	
	<select id="selectFileByfi_num" resultType="kr.kh.app.model.vo.FileVO">
		SELECT * FROM file WHERE fi_num = #{fi_num}
	</select>
	<select id="selectRecommend" resultType="kr.kh.app.model.vo.RecommendVO">
		SELECT * FROM recommend WHERE re_me_id = #{me_id} AND re_bo_num = #{bo_num}
	</select>
	<select id="selectCommentList" resultType="kr.kh.app.model.vo.CommentVO">
		SELECT * FROM comment 
		WHERE cm_bo_num = #{cri.boNum}
		ORDER BY cm_num DESC
		LIMIT #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getTotalCountComment" resultType="int">
		SELECT count(*) FROM comment 
		WHERE cm_bo_num = #{cri.boNum}
	</select>
	<select id="selectComment">
		SELECT * FROM comment WHERE cm_num = #{num}
	</select>
	
	<update id="updateView">
		UPDATE board 
			SET bo_view = bo_view + 1 
			WHERE bo_num = #{num}
	</update>
	<update id="updateBoard">
		update board set
			bo_title = #{board.bo_title},
			bo_content = #{board.bo_content},
			bo_co_num = #{board.bo_co_num}
		where
			bo_num = #{board.bo_num}
	</update>
	<update id="updateRecommend">
		UPDATE recommend SET
			re_state = #{re.re_state}
		WHERE
			re_num = #{re.re_num}
	</update>
	<update id="updateComment">
		UPDATE comment SET
			cm_content = #{cm.cm_content}
		WHERE
			cm_num = #{cm.cm_num}
	</update>
	
	
	<delete id="deleteBoard">
		DELETE FROM board WHERE bo_num = #{num}
	</delete>
	<delete id="deldeteFile">
		DELETE FROM file WHERE fi_num = #{num}
	</delete>
	<delete id="deleteComment">
		DELETE FROM comment WHERE cm_num = #{num}
	</delete>


</mapper>